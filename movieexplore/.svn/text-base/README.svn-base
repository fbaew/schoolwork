 __  __            _      _____            _                
|  \/  | _____   _(_) ___| ____|_  ___ __ | | ___  _ __ ___ 
| |\/| |/ _ \ \ / / |/ _ \  _| \ \/ / '_ \| |/ _ \| '__/ _ \
| |  | | (_) \ V /| |  __/ |___ >  <| |_) | | (_) | | |  __/
|_|  |_|\___/ \_/ |_|\___|_____/_/\_\ .__/|_|\___/|_|  \___|
                                    |_|A Project for SENG 301



 [0.0] Where to find non-code requirements for each deliverable
  0.1  Deliverable 1
  0.2  Deliverable 2

 [1.0] Quick multi-platform help for the TA's
  1.1  How to compile this program in Windows
  1.2  How to compile this program in Unix
  1.3  How to run this program in Windows
  1.4  How to run this program in Unix
  1.5  How to test this program in Windows
  1.6  How to test this program in Unix

--------------------------------------------------------------------------------
[0.0] Where to find non-code requirements for each deliverable
--------------------------------------------------------------------------------

All extra documentation, diagrams, and otherwise which have been included to
satisfy the requirements of each deliverable can be found in docs/

--------------------------------------------------------------------------------
[0.1] Deliverable 1
--------------------------------------------------------------------------------

A pdf document outlining the workings and rationale behind our popularity
algorithm can be found at docs/popularity.pdf


--------------------------------------------------------------------------------
[0.2] Deliverable 2
--------------------------------------------------------------------------------

A pdf document including a diagram of our problem domain, as well as a written
description thereof can be found at docs/problemDomain.pdf


--------------------------------------------------------------------------------
[1.0] Quick multi-platform help for the TA's
--------------------------------------------------------------------------------

This section is wrote specifically for the TA's who are marking this project. If
you have any troubles doing anything regarding this program, please consult the 
help below as we have tried to anticipate all troublesome use cases for our
program. Note that this was wrote using all Unix tools and so the Windows test
environment may react badly to some of the unix-isms that we have incorporated
into the code base. This is the fundamental reason why this help is here. 

--------------------------------------------------------------------------------
[1.1] How to compile this program in Windows
--------------------------------------------------------------------------------

Under Windows, the simplest solution is to compile MovieExplore using Eclipse
(Right click /src, Run As -> Java Application)

--------------------------------------------------------------------------------
[1.2] How to compile this program in Unix
--------------------------------------------------------------------------------

For the user's convenience, a makefile has been included, so MovieExplore can be
compiled using the command:
	make

--------------------------------------------------------------------------------
[1.3] How to run this program in Windows
--------------------------------------------------------------------------------

Under Windows, the simplest solution is to run MovieExplore using Eclipse

--------------------------------------------------------------------------------
[1.4] How to run this program in Unix
--------------------------------------------------------------------------------

java -cp build MovieExplore <data> <command> [switches]
If no arguments are specified a usage message will guide you further.

--------------------------------------------------------------------------------
[1.5] How to test this program in Windows
--------------------------------------------------------------------------------

All Tests can be found in the tests/ subfolder. In Windows, the easiest option 
is to run these tests using Eclipse (Right click /tests, Run As -> JUnit Test)

--------------------------------------------------------------------------------
[1.6] How to test this program in Unix
--------------------------------------------------------------------------------

The most straightforward way to test MovieExplore under unix is to use the make
utility:
	make test

This will run all tests, acceptance and otherwise.
